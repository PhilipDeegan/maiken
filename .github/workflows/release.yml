name: Production Builds
on:
  push:
    branches: [ master ]
  workflow_dispatch:
jobs:
  build:
      strategy:
        matrix:
          os: [ubuntu-latest, windows-latest]
      runs-on: ${{ matrix.os }}
      steps:
        - uses: actions/checkout@v4
        - if: matrix.os == 'windows-latest'
          run: bash -c "rm /bin/link" # interferes with cl/link.exe
        - if: matrix.os == 'windows-latest'
          uses: ilammy/msvc-dev-cmd@v1
          with:
            arch: amd64
        - if: matrix.os == 'windows-latest'
          shell: cmd
          env:
            MKN_CL_PREFERRED: 1
            KUL_GIT_CO: --depth 1
          run: |
            bash -c ./res/ci/win_build.sh
            mkn build -dtKOg 0 -a "-std:c++17 -EHsc"

        - if: matrix.os == 'ubuntu-latest'
          env:
            MKN_GCC_PREFERRED: 1
            KUL_GIT_CO: --depth 1
          run: |
            ./res/ci/nixish_setup.sh && make nix
            KLOG=3 ./mkn build -dtKa "-std=c++17 -fPIC" -O 2 -g 0 -W 9 -o mkn_nix

        - if: matrix.os == 'ubuntu-latest'
          uses: actions/upload-artifact@v4.4.0
          with:
            name: maiken-${{ matrix.os }}
            path: bin/build/mkn_nix
            retention-days: 1

        - if: matrix.os == 'windows-latest'
          uses: actions/upload-artifact@v4.4.0
          with:
            name: maiken-${{ matrix.os }}
            path: bin/build/mkn.exe
            retention-days: 1


  build_many_linux:
    runs-on: ubuntu-20.04
    container: quay.io/pypa/manylinux_2_28_x86_64:latest
    steps:
    - uses: actions/checkout@v3
    - run: ./res/ci/nixish_setup.sh && make nix
    - env:
        MKN_GCC_PREFERRED: 1
        KUL_GIT_CO: --depth 1
      run: KLOG=3 ./mkn build -dtKa "-std=c++17 -fPIC" -O 2 -g 0 -W 9 -o mkn_manylinux
    - uses: actions/upload-artifact@v4.4.0
      with:
        name: maiken-manylinux-latest
        path: bin/build/mkn_manylinux
        retention-days: 1


  build_x86_macos:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v4
    - run: ./res/ci/nixish_setup.sh && make bsd
    - env:
        MKN_GCC_PREFERRED: 1
        KUL_GIT_CO: --depth 1
      run: KLOG=3 ./mkn build -dtKa "-std=c++17 -fPIC" -O 2 -g 0 -W 9 -o mkn_x86_osx
    - uses: actions/upload-artifact@v4.4.0
      with:
        name: maiken-macos-12
        path: bin/build/mkn_x86_osx
        retention-days: 1


  build_arm_macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - run: ./res/ci/nixish_setup.sh && make bsd
    - env:
        MKN_GCC_PREFERRED: 1
        KUL_GIT_CO: --depth 1
      run: KLOG=3 ./mkn build -dtKa "-std=c++17 -fPIC" -O 2 -g 0 -W 9 -o mkn_arm_osx
    - uses: actions/upload-artifact@v4.4.0
      with:
        name: maiken-macos-latest
        path: bin/build/mkn_arm_osx
        retention-days: 1


  release:
    name: "Prelease"
    needs: [build, build_many_linux, build_arm_macos, build_x86_macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4.1.7
      - name: Display fetched artifacts
        run: ls -R
      - name: Emit a Github Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Development Build"
          files: |
            maiken-windows-latest/mkn.exe
            maiken-ubuntu-latest/mkn_nix
            maiken-manylinux-latest/mkn_manylinux
            maiken-macos-12/mkn_x86_osx
            maiken-macos-latest/mkn_arm_osx
